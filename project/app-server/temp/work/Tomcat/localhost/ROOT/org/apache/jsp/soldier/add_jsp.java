/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.79
 * Generated at: 2023-08-26 11:50:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.soldier;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import bitcamp.myapp.vo.Soldier;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.time.format.DateTimeParseException");
    _jspx_imports_classes.add("bitcamp.myapp.vo.Soldier");
    _jspx_imports_classes.add("java.time.LocalDate");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      bitcamp.myapp.dao.SoldierDao soldierDao = null;
      synchronized (application) {
        soldierDao = (bitcamp.myapp.dao.SoldierDao) _jspx_page_context.getAttribute("soldierDao", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (soldierDao == null){
          throw new java.lang.InstantiationException("bean soldierDao not found within scope");
        }
      }
      org.apache.ibatis.session.SqlSessionFactory sqlSessionFactory = null;
      synchronized (application) {
        sqlSessionFactory = (org.apache.ibatis.session.SqlSessionFactory) _jspx_page_context.getAttribute("sqlSessionFactory", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (sqlSessionFactory == null){
          throw new java.lang.InstantiationException("bean sqlSessionFactory not found within scope");
        }
      }
      bitcamp.util.NcpObjectStorageService ncpObjectStorageService = null;
      synchronized (application) {
        ncpObjectStorageService = (bitcamp.util.NcpObjectStorageService) _jspx_page_context.getAttribute("ncpObjectStorageService", javax.servlet.jsp.PageContext.APPLICATION_SCOPE);
        if (ncpObjectStorageService == null){
          throw new java.lang.InstantiationException("bean ncpObjectStorageService not found within scope");
        }
      }

  Soldier loginUser = (Soldier) request.getSession().getAttribute("loginUser");
  if (loginUser == null || !loginUser.getName().equals("행정관")) {
    response.sendRedirect("/auth/login.jsp");
    return;
  }

  Soldier s = new Soldier();
  s.setName(request.getParameter("name"));
  s.setRank(request.getParameter("rank"));

  String ageStr = request.getParameter("age");
  if (ageStr != null && !ageStr.isEmpty()) {
    s.setAge(Integer.parseInt(ageStr));
  }
  s.setPassword(request.getParameter("password"));

  String enlistmentDateStr = request.getParameter("enlistmentDate");
  if (enlistmentDateStr != null && !enlistmentDateStr.isEmpty()) {
    try {
      LocalDate enlistmentDate = LocalDate.parse(enlistmentDateStr);
      s.setEnlistmentDate(enlistmentDate);
    } catch (DateTimeParseException e) {
      e.printStackTrace();
    }
  }

  Part photoPart = request.getPart("photo");
  if (photoPart.getSize() > 0) {
    String uploadFileUrl = ncpObjectStorageService.uploadFile(
            "bitcamp-nc7-bucket-01", "soldier/", photoPart);
    s.setPhoto(uploadFileUrl);
  }

  soldierDao.insert(s);
  sqlSessionFactory.openSession(false).commit();
  response.sendRedirect("list.jsp");

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
